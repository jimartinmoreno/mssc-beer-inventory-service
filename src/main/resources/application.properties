spring.application.name=inventory-service
server.port=8082
#Comma-separated list of active profiles. Can be overridden by a command line switch.
#spring.profiles.active=mysql
#Import additional config data.
#spring.config.import=optional:file:./dev.properties

#Log levels severity mapping.
logging.level.guru=debug
#Whether to log information about the application when it starts.
spring.main.log-startup-info=true
#Whether initialization should be performed lazily
spring.main.lazy-initialization=false
#Whether to enable automatic restart.
spring.devtools.restart.enabled=true
#Whether to enable a livereload.com-compatible server.
spring.devtools.livereload.enabled=false
#Actuator whether to enable the shutdown endpoint.
management.endpoint.shutdown.enabled=true
#Actuator endpoints IDs that should be included or '*' for all.
management.endpoints.web.exposure.include=*

#Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.
#logging.file.name=
#Location of the log file. For instance, `/var/log`.
#logging.file.path=


# defaults for this docker image - vromero/activemq-artemis
spring.artemis.user=admin
spring.artemis.password=admin
spring.artemis.broker-url=tcp://ubuntu-vm:61616

logging.level.guru.sfg=debug

spring.security.user.name=good
spring.security.user.password=beer

# Spring Data hangs when not set under Spring Boot 2.3.0
spring.data.jpa.repositories.bootstrap-mode=default

logging.level.guru.springframework=debug

#spring.sql.init.mode=embedded
#spring.datasource.url=jdbc:h2:mem:beerinventoryservice;MODE=MYSQL
#spring.h2.console.enabled=true

#Show SQL
spring.jpa.properties.hibernate.show_sql=false
#Format SQL
spring.jpa.properties.hibernate.format_sql=true
#Show bind values
#logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true

spring.zipkin.enabled=false
spring.zipkin.base-url=http://ubuntu-vm:9411/

spring.cloud.discovery.enabled=false

# Flag to say that remote configuration is enabled. Default true;
spring.cloud.config.enabled=false
spring.cloud.config.uri=http://localhost:8888